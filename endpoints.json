{
  "GET /api": {
    "description": "serves up a json representation of all the available endpoints of the api"
  },
  "GET /api/codes/": {
    "description": "serves all codes",
    "queries": [],
    "exampleResponse": {
      "codes": [
        {
          "id": 1,
          "user_id": 1,
          "code": "9999"
        }
      ]
    }
  },
  "GET /api/codes/:user_id": {
    "description": "serves a randomly generated 4 digit code",
    "queries": [],
    "exampleResponse": {
      "code": [
        {
          "user_id": 1,
          "code": "9999"
        }
      ]
    }
  },
  "POST /api/users": {
    "description": "adds a new user to the database",
    "exampleRequest": {
      "first_name": "Alex",
      "surname": "Jones"
    },
    "exampleResponse": {
      "user": [
        {
          "id": 4,
          "first_name": "Alex",
          "surname": "Jones"
        }
      ]
    }
  },
  "GET /api/users/:user_id": {
    "description": "serves information about a single user",
    "queries": [],
    "exampleResponse": {
      "user": [
        {
          "id": 1,
          "first_name": "John",
          "surname": "Smith"
        }
      ]
    }
  },
  "GET /api/devices/:user_id": {
    "description": "serves an array of all devices for a single user",
    "queries": [],
    "exampleResponse": {
      "devices": [
        {
          "id": 2,
          "user_id": 1,
          "push_key": "848sdsgdg"
        }
      ]
    }
  },
  "POST /api/devices/:user_id": {
    "description": "adds a new device to a user",
    "exampleRequest": {
      "push_key": null,
      "amazon_id": "test",
      "code": "9999"
    },
    "exampleResponse": {
      "devices": [
        {
          "id": 5,
          "user_id": 1,
          "push_key": null,
          "amazon_id": "test"
        }
      ]
    }
  },
  "GET /api/meds/:user_id": {
    "description": "serves an array of all medications for a singular user",
    "queries": [],
    "exampleResponse": {
      "topics": [
        {
          "id": 1,
          "user_id": 1,
          "type": "ropinerol",
          "due": "2019-07-29T15:00:00.000Z",
          "taken": false,
          "taken_at": null,
          "status": 0
        }
      ]
    }
  },
  "POST /api/meds/:user_id:": {
    "description": "adds a new medication object to a single user",
    "exampleRequest": {
      "user_id": 1,
      "type": "codeine",
      "due": "2019-07-29T15:00:00.000Z"
    },
    "exampleResponse": {
      "med": [
        {
          "id": 4,
          "user_id": 1,
          "type": "codeine",
          "due": "2019-07-29T15: 00: 00.000Z",
          "taken": false,
          "taken_at": null,
          "status": 0
        }
      ]
    }
  },
  "PATCH /api/meds/:med_id": {
    "description": "updates the taken value of a medication to true",
    "exampleRequest": {
      "taken": true
    },
    "exampleResponse": {
      "med": {
        "id": 4,
        "user_id": 1,
        "type": "codeine",
        "due": "2019-07-29T15: 00: 00.000Z",
        "taken": true,
        "taken_at": null,
        "status": 0
      }
    }
  },
  "DELETE /api/meds/:med_id": {
    "description": "deletes the medication with the specified id and responds with no content"
  },
  "GET /api/events/:user_id": {
    "description": "serves an array of all events for a singular user",
    "queries": [],
    "exampleResponse": {
      "events": [
        {
          "id": 1,
          "user_id": 1,
          "time": "2019-07-29T15: 00: 00.000Z",
          "description": "fell over at 3pm"
        }
      ]
    }
  },
  "POST /api/events/:user_id:": {
    "description": "adds a new event object to a single user",
    "exampleRequest": { "description": "new event" },
    "exampleResponse": {
      "event": [
        {
          "id": 4,
          "user_id": 1,
          "time": "2019-07-31T21: 59: 39.803Z",
          "description": "new event"
        }
      ]
    }
  },
  "PATCH /api/events/:event_id": {
    "description": "updates the description of an event to true",
    "exampleRequest": {
      "description": "new description"
    },
    "exampleResponse": {
      "event": {
        "id": 1,
        "user_id": 1,
        "time": "2019-07-29T15:00:00.000Z",
        "description": "new description"
      }
    }
  },
  "DELETE /api/events/:event_id": {
    "description": "deletes the event with the specified id and responds with no content"
  },
  "GET /api/quiz/:user_id": {
    "description": "serves an array of all quizzes for a singular user",
    "queries": [],
    "exampleResponse": {
      "quizzes": [
        {
          "id": 3,
          "user_id": 1,
          "completed_at": "2019-07-29T13: 00: 00.000Z",
          "mood": 0,
          "stiffness": 1,
          "slowness": 0,
          "tremor": 2
        }
      ]
    }
  },
  "POST /api/quiz/:user_id:": {
    "description": "adds a new quiz to a single user",
    "exampleRequest": {
      "mood": 1,
      "stiffness": 1,
      "slowness": 1,
      "tremor": 1
    },
    "exampleResponse": {
      "quiz": [
        {
          "id": 4,
          "user_id": 1,
          "completed_at": "2019-07-31T22: 08: 35.649Z",
          "mood": 1,
          "stiffness": 1,
          "slowness": 1,
          "tremor": 1
        }
      ]
    }
  },
  "PATCH /api/quiz/:quiz_id": {
    "description": "updates the quiz values",
    "exampleRequest": {
      "mood": 0,
      "stiffness": 0,
      "slowness": 0,
      "tremor": 5
    },
    "exampleResponse": {
      "quiz": {
        "id": 1,
        "user_id": 3,
        "completed_at": "2019-07-29T13: 00: 00.000Z",
        "mood": 0,
        "stiffness": 0,
        "slowness": 0,
        "tremor": 5
      }
    }
  },
  "DELETE /api/quiz/:quiz_id": {
    "description": "deletes the quiz with the specified id and responds with no content"
  }
}
